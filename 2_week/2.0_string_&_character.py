...
#---------------------
    2.4 Задача №1
#---------------------
GC-состав является важной характеристикой геномных последовательностей
и определяется как процентное соотношение суммы всех гуанинов
и цитозинов к общему числу нуклеиновых оснований в геномной последовательности. 

Напишите программу, которая вычисляет процентное содержание символов G (гуанин)
и C (цитозин) в введенной строке (программа не должна зависеть от регистра вводимых символов).

Например, в строке "acggtgttat" процентное содержание символов G и C
равно 4 / 10 * 100 = 40.0, где 4 - это количество символов G и C,  а 10 - это длина строки.
...

a = str ( input() )
s1 = a.upper().count('c'.upper())
s2 = a.upper().count('g'.upper())
S=s1+s2
print(S/len(a)*100)

...
#---------------------
    2.4 Задача №2
#---------------------
Узнав, что ДНК не является случайной строкой,
только что поступившие в Институт биоинформатики
студенты группы информатиков предложили использовать алгоритм сжатия,
который сжимает повторяющиеся символы в строке.

Кодирование осуществляется следующим образом:
s = 'aaaabbсaa' преобразуется в 'a4b2с1a2',
то есть группы одинаковых символов исходной строки заменяются на этот символ
и количество его повторений в этой позиции строки.

Напишите программу, которая считывает строку,
кодирует её предложенным алгоритмом и выводит закодированную последовательность на стандартный вывод.
Кодирование должно учитывать регистр символов.
...

s = str(input())
l = len(s)-1
c = 1
t = ''
if len(s)==1:
    t = t +s+str(c)
else:
    for i in range(0,l):
        if s[i]==s[i+1]:
            c +=1
        elif s[i]!=s[i+1]:
            t = t + s[i]+str(c)
            c = 1
    for j in range(l,l+1):
        if s[-1]==s[-2]:
            t = t +s[j]+str(c)
        elif s[-1]!=s[-2]:
            t = t +s[j]+str(c)
            c = 1
print(t)
